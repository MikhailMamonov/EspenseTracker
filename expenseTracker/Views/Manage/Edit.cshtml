@model expenseTracker.Models.ApplicationUser

@{
    ViewBag.Title = "Edit";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>




    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ApplicationUser</h4>
            <hr />
            @if (TempData["notice"] != null && (string)TempData["notice"] != "")
            {
                if ((string) TempData["notice"] == ("Role removed from this user successfully !") ||
                    (string)TempData["notice"] == ("Role added to this user successfully !"))
                {
                     <p class="text-success">@TempData["notice"]</p>
                 }
                else
                {
                    <p class="text-danger">@TempData["notice"]</p>
                }
            }
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
                <table>
                    <tr>
                        @foreach (var item in ViewBag.RolesForDisplay)
                {

                            <td>
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.DisplayFor(modelItem => item)
                                    </div>
                                </div>
                            </td>


                        }
                    </tr>
                </table>
            </div>





            @Html.HiddenFor(model => model.Id)



            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <h4>Role Add to User</h4>

    @using (Html.BeginForm("RoleAddToUser", "Manage"))
            {

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="form-horizontal">
            <div class="form-group">
                Username : @Html.Display("UserName")
                <br />
                Role Name: @Html.DropDownList("RoleName", (IEnumerable<SelectListItem>)ViewBag.Roles, "Select ...")
            </div>

            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" />
                </div>
            </div>
        </div>
    }
    <h4>Delete A User from a Role</h4>

    @using (Html.BeginForm("DeleteRoleForUser", "Manage"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="form-horizontal">
            <div class="form-group">
                Username : @Html.Display("UserName")
                <br />
                Role Name: @Html.DropDownList("RoleName", (IEnumerable<SelectListItem>)ViewBag.RolesForDelete, "Select ...")
            </div>
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Delete this user from Role" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back", "GetAllUsers")
    </div>
</body>
</html>